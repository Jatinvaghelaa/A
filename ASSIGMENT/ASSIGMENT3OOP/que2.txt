//What is OOP? List OOP concepts





1.Class: A class is a blueprint or template that defines the properties and behaviors of objects. It serves as a blueprint for creating objects of a specific type.

2.Object: An object is an instance of a class. It represents a specific entity that possesses data and behavior as defined by its class.

3.Abstraction: Abstraction refers to the process of simplifying complex systems by representing them at a higher level of abstraction. It allows you to focus on the essential features and behaviors of an object while hiding unnecessary details.

4.Inheritance: Inheritance enables objects to inherit properties and behaviors from a parent or base class. It promotes code reuse, allows for creating specialized classes based on existing ones, and establishes an "is-a" relationship between classes.

5.Polymorphism: Polymorphism allows objects of different classes to be treated as objects of a common base class. It enables the use of a single interface to represent different types of objects, providing flexibility and extensibility in code design.

6.Encapsulation: Encapsulation is the bundling of data and methods together within a class. It protects the data from direct access and ensures that it can only be accessed through defined methods, providing better control over the data and maintaining its integrity.